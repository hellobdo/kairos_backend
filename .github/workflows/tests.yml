name: Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - 'api/ibkr.py'
      - 'analytics/broker_cash.py'
      - 'analytics/broker_executions.py'
      - 'utils/db_utils.py'
      - 'indicators/helpers/column_utils.py'
      - 'indicators/*.py'
      - 'backtests/utils/backtest_functions.py'
      - 'tests/test_broker_cash.py'
      - 'tests/test_broker_executions.py'
      - 'tests/test_db_utils.py'
      - 'tests/test_ibkr_api.py'
      - 'tests/test_indicators.py'
      - 'tests/test_column_utils.py'
      - 'tests/test_backtest_functions.py'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'api/ibkr.py'
      - 'analytics/broker_executions.py'
      - 'analytics/broker_cash.py'
      - 'utils/db_utils.py'
      - 'indicators/helpers/column_utils.py'
      - 'indicators/*.py'
      - 'backtests/utils/backtest_functions.py'
      - 'tests/test_broker_cash.py'
      - 'tests/test_broker_executions.py'
      - 'tests/test_db_utils.py'
      - 'tests/test_ibkr_api.py'
      - 'tests/test_indicators.py'
      - 'tests/test_column_utils.py'
      - 'tests/test_backtest_functions.py'
  workflow_dispatch:  # Allow manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        # Install any development dependencies
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
        
    - name: Run db_utils tests
      run: |
        # Add current directory to Python path to find the tests package
        python -m tests.test_db_utils
      env:
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Run broker_cash module tests
      run: |
        # Add current directory to Python path to find the tests package
        python -m tests.test_broker_cash
      env:
        # Set environment variables that match test expectations
        IBKR_TOKEN_PAPER: "dummy_token_paper"
        IBKR_QUERY_ID_CASH_PAPER: "dummy_query_paper" 
        IBKR_TOKEN_LIVE: "dummy_token_live"
        IBKR_QUERY_ID_CASH_LIVE: "dummy_query_live"
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Run IBKR API tests
      run: |
        # Add current directory to Python path to find the tests package
        python -m tests.test_ibkr_api
      env:
        # Use dummy tokens for CI testing
        IBKR_TOKEN_PAPER: "dummy_token_paper"
        IBKR_QUERY_ID_CASH_PAPER: "dummy_query_paper"
        PYTHONPATH: ${{ github.workspace }}

    - name: Run broker_executions module tests
      run: |
        # Add current directory to Python path to find the tests package
        python -m tests.test_broker_executions
      env:
        # Use dummy tokens for CI testing
        IBKR_TOKEN_PAPER: "dummy_token_paper"
        IBKR_QUERY_ID_TRADE_CONFIRMATION_PAPER: "dummy_query_paper"
        IBKR_TOKEN_LIVE: "dummy_token_live"
        IBKR_QUERY_ID_TRADE_CONFIRMATION_LIVE: "dummy_query_live"
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Run indicators tests
      run: |
        # Add current directory to Python path to find the tests package
        python -m tests.test_indicators
      env:
        PYTHONPATH: ${{ github.workspace }}

    - name: Run column_utils tests
      run: |
        # Add current directory to Python path to find the tests package
        python -m tests.test_column_utils
      env:
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Run backtest functions tests
      run: |
        # Add current directory to Python path to find the tests package
        python -m tests.test_backtest_functions
      env:
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { repo, owner } = context.repo;
          const run_id = context.runId;
          const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
          
          github.rest.issues.create({
            owner,
            repo,
            title: 'Analytics modules tests failing in CI',
            body: `Tests for the analytics modules are failing in the CI pipeline. [View the workflow run](${run_url}) for details.`
          }); 