name: Tests

on:
  push:
    branches: [ main, master ]
    paths:
      - 'api/ibkr.py'
      - 'analytics/broker_cash.py'
      - 'analytics/broker_executions.py'
      - 'utils/db_utils.py'
      - 'indicators/helpers/column_utils.py'
      - 'indicators/*.py'
      - 'backtests/utils/backtest_functions.py'
      - 'tests/test_broker_cash.py'
      - 'tests/test_broker_executions.py'
      - 'tests/test_db_utils.py'
      - 'tests/test_ibkr_api.py'
      - 'tests/test_indicators.py'
      - 'tests/test_column_utils.py'
      - 'tests/test_backtest_functions.py'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'api/ibkr.py'
      - 'analytics/broker_executions.py'
      - 'analytics/broker_cash.py'
      - 'utils/db_utils.py'
      - 'indicators/helpers/column_utils.py'
      - 'indicators/*.py'
      - 'backtests/utils/backtest_functions.py'
      - 'tests/test_broker_cash.py'
      - 'tests/test_broker_executions.py'
      - 'tests/test_db_utils.py'
      - 'tests/test_ibkr_api.py'
      - 'tests/test_indicators.py'
      - 'tests/test_column_utils.py'
      - 'tests/test_backtest_functions.py'
  workflow_dispatch:  # Allow manual triggering

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      test_modules: ${{ steps.set-test-modules.outputs.test_modules }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set test modules
        id: set-test-modules
        run: |
          # Extract test modules from workflow file
          # Find paths with tests/test_*.py in the workflow file
          TEST_PATHS=$(grep -o "tests/test_[^ ]*" $GITHUB_WORKSPACE/.github/workflows/tests.yml | sort | uniq)
          
          # Extract module names from paths
          TEST_MODULES_JSON="["
          FIRST=true
          for path in $TEST_PATHS; do
            # Extract module name from path (remove 'tests/test_' prefix and '.py' suffix)
            MODULE=$(echo $path | sed -E 's/tests\/test_(.*)\.py/\1/')
            
            # Add to JSON array
            if [ "$FIRST" = true ]; then
              FIRST=false
            else
              TEST_MODULES_JSON="$TEST_MODULES_JSON, "
            fi
            TEST_MODULES_JSON="$TEST_MODULES_JSON\"$MODULE\""
          done
          TEST_MODULES_JSON="$TEST_MODULES_JSON]"
          
          # Set output for matrix
          echo "test_modules=$TEST_MODULES_JSON" >> $GITHUB_OUTPUT
          echo "Detected test modules: $TEST_MODULES_JSON"

  test:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Continue running other tests even if one fails
      matrix:
        test_module: ${{ fromJSON(needs.setup.outputs.test_modules) }}

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Install any development dependencies
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
      
      - name: Run ${{ matrix.test_module }} tests
        id: run_test
        run: |
          # Add current directory to Python path to find the tests package
          python -m tests.test_${{ matrix.test_module }}
        env:
          PYTHONPATH: ${{ github.workspace }}
          # Common test tokens
          IBKR_TOKEN_PAPER: "dummy_token_paper"
          IBKR_TOKEN_LIVE: "dummy_token_live"
          IBKR_QUERY_ID_CASH_PAPER: "dummy_query_paper"
          IBKR_QUERY_ID_CASH_LIVE: "dummy_query_live"
          IBKR_QUERY_ID_TRADE_CONFIRMATION_PAPER: "dummy_query_paper"
          IBKR_QUERY_ID_TRADE_CONFIRMATION_LIVE: "dummy_query_live"
    
  notify:
    needs: test
    runs-on: ubuntu-latest
    if: failure()  # Only run if any of the test jobs failed
    steps:
      - name: Notify on failure
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { repo, owner } = context.repo;
            const run_id = context.runId;
            const run_url = `https://github.com/${owner}/${repo}/actions/runs/${run_id}`;
            
            github.rest.issues.create({
              owner,
              repo,
              title: `CI Tests Failed`,
              body: `One or more tests failed in the CI pipeline.\n\n[View the workflow run](${run_url}) for details.`
            }); 